{"version":3,"sources":["DATA/stationSelectData.js","context.js","DateSelector.js","StationSelector.js","Results.js","TrainNoSelector.js","App.js","index.js"],"names":["stationSelectData","data","city","station","AppContext","React","createContext","AppProvider","children","console","log","useState","stationData","setStationData","selectedDate","setSelectedDate","startName","setStartName","finishName","setFinishName","startID","setStartID","finishID","setFinishID","resultsData","setResultsData","faresData","setFaresData","trainNo","setTrainNo","trainNoData","setTrainNoData","isSending","setIsSending","useEffect","a","fetch","res","json","getStationData","forEach","item","StationID","StationName","fetchResultData","TrainTimetables","sort","b","StopTimes","DepartureTime","replace","fetchFaresData","ODFares","fetchTrainNoData","Provider","value","useGlobalContext","useContext","DateSelector","type","placeholder","onChange","e","target","StationSelector","defaultValue","disabled","map","index","label","onClick","Results","className","TrainInfo","TrainTypeCode","TrainTypeName","TrainNo","StartingStationName","EndingStationName","ArrivalTime","length","singlePrice","filter","TrainType","parseInt","price","Fares","FareClass","Price","push","match","TrainNoSelector","App","ReactDOM","render","document","getElementById"],"mappings":"uNAAaA,EAAoB,CAC/BC,KAAM,CACJ,CACEC,KAAM,eACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,iBAEjD,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,uBAGJ,CAAED,KAAM,qBAAOC,QAAS,CAAC,eAAM,eAAM,eAAM,4BAAS,iBACpD,CACED,KAAM,qBACNC,QAAS,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAEhD,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CAAC,qBAAO,eAAM,eAAM,eAAM,qBAAO,iBAE5C,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CAAED,KAAM,qBAAOC,QAAS,CAAC,eAAM,eAAM,eAAM,eAAM,iBACjD,CAAED,KAAM,qBAAOC,QAAS,CAAC,eAAM,eAAM,eAAM,eAAM,iBACjD,CAAED,KAAM,qBAAOC,QAAS,CAAC,eAAM,eAAM,eAAM,iBAC3C,CAAED,KAAM,qBAAOC,QAAS,CAAC,eAAM,iBAC/B,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,qBACA,eACA,qBACA,eACA,eACA,qBACA,eACA,eACA,eACA,uBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACED,KAAM,qBACNC,QAAS,CACP,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,mB,OChTFC,EAAaC,IAAMC,gBACnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrBC,QAAQC,IAAI,gBAGZ,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KAEA,EAAsCZ,mBAAS,MAA/C,mBAA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","file":"static/js/main.5dc32efe.chunk.js","sourcesContent":["export const stationSelectData = {\r\n  data: [\r\n    {\r\n      city: '常用',\r\n      station: [\r\n        '基隆',\r\n        '七堵',\r\n        '南港',\r\n        '松山',\r\n        '臺北',\r\n        '萬華',\r\n        '板橋',\r\n        '樹林',\r\n        '桃園',\r\n        '中壢',\r\n        '新竹',\r\n        '竹南',\r\n        '苗栗',\r\n        '豐原',\r\n        '臺中',\r\n        '彰化',\r\n        '員林',\r\n        '斗六',\r\n        '嘉義',\r\n        '新營',\r\n        '臺南',\r\n        '岡山',\r\n        '新左營',\r\n        '高雄',\r\n        '屏東',\r\n        '潮州',\r\n        '臺東',\r\n        '玉里',\r\n        '花蓮',\r\n        '蘇澳新',\r\n        '宜蘭',\r\n        '瑞芳',\r\n      ],\r\n    },\r\n    {\r\n      city: '基隆市',\r\n      station: ['基隆', '三坑', '八堵', '七堵', '百福', '海科館', '暖暖'],\r\n    },\r\n    {\r\n      city: '新北市',\r\n      station: [\r\n        '五堵',\r\n        '汐止',\r\n        '汐科',\r\n        '板橋',\r\n        '浮洲',\r\n        '樹林',\r\n        '南樹林',\r\n        '山佳',\r\n        '鶯歌',\r\n        '福隆',\r\n        '貢寮',\r\n        '雙溪',\r\n        '牡丹',\r\n        '三貂嶺',\r\n        '大華',\r\n        '十分',\r\n        '望古',\r\n        '嶺腳',\r\n        '平溪',\r\n        '菁桐',\r\n        '猴硐',\r\n        '瑞芳',\r\n        '八斗子',\r\n        '四腳亭',\r\n      ],\r\n    },\r\n    { city: '臺北市', station: ['南港', '松山', '臺北', '臺北-環島', '萬華'] },\r\n    {\r\n      city: '桃園市',\r\n      station: ['桃園', '內壢', '中壢', '埔心', '楊梅', '富岡', '新富'],\r\n    },\r\n    {\r\n      city: '新竹縣',\r\n      station: [\r\n        '北湖',\r\n        '湖口',\r\n        '新豐',\r\n        '竹北',\r\n        '竹中',\r\n        '六家',\r\n        '上員',\r\n        '榮華',\r\n        '竹東',\r\n        '橫山',\r\n        '九讚頭',\r\n        '合興',\r\n        '富貴',\r\n        '內灣',\r\n      ],\r\n    },\r\n    {\r\n      city: '新竹市',\r\n      station: ['北新竹', '千甲', '新莊', '新竹', '三姓橋', '香山'],\r\n    },\r\n    {\r\n      city: '苗栗縣',\r\n      station: [\r\n        '崎頂',\r\n        '竹南',\r\n        '談文',\r\n        '大山',\r\n        '後龍',\r\n        '龍港',\r\n        '白沙屯',\r\n        '新埔',\r\n        '通霄',\r\n        '苑裡',\r\n        '造橋',\r\n        '豐富',\r\n        '苗栗',\r\n        '南勢',\r\n        '銅鑼',\r\n        '三義',\r\n      ],\r\n    },\r\n    {\r\n      city: '臺中市',\r\n      station: [\r\n        '日南',\r\n        '大甲',\r\n        '臺中港',\r\n        '清水',\r\n        '沙鹿',\r\n        '龍井',\r\n        '大肚',\r\n        '追分',\r\n        '泰安',\r\n        '后里',\r\n        '豐原',\r\n        '栗林',\r\n        '潭子',\r\n        '頭家厝',\r\n        '松竹',\r\n        '太原',\r\n        '精武',\r\n        '臺中',\r\n        '五權',\r\n        '大慶',\r\n        '烏日',\r\n        '新烏日',\r\n        '成功',\r\n      ],\r\n    },\r\n    {\r\n      city: '彰化縣',\r\n      station: [\r\n        '彰化',\r\n        '花壇',\r\n        '大村',\r\n        '員林',\r\n        '永靖',\r\n        '社頭',\r\n        '田中',\r\n        '二水',\r\n        '源泉',\r\n      ],\r\n    },\r\n    { city: '南投縣', station: ['濁水', '龍泉', '集集', '水里', '車埕'] },\r\n    { city: '雲林縣', station: ['林內', '石榴', '斗六', '斗南', '石龜'] },\r\n    { city: '嘉義縣', station: ['大林', '民雄', '水上', '南靖'] },\r\n    { city: '嘉義市', station: ['嘉北', '嘉義'] },\r\n    {\r\n      city: '臺南市',\r\n      station: [\r\n        '後壁',\r\n        '新營',\r\n        '柳營',\r\n        '林鳳營',\r\n        '隆田',\r\n        '拔林',\r\n        '善化',\r\n        '南科',\r\n        '新市',\r\n        '永康',\r\n        '大橋',\r\n        '臺南',\r\n        '保安',\r\n        '仁德',\r\n        '中洲',\r\n        '長榮大學',\r\n        '沙崙',\r\n      ],\r\n    },\r\n    {\r\n      city: '高雄市',\r\n      station: [\r\n        '大湖',\r\n        '路竹',\r\n        '岡山',\r\n        '橋頭',\r\n        '楠梓',\r\n        '新左營',\r\n        '左營',\r\n        '內惟',\r\n        '美術館',\r\n        '鼓山',\r\n        '三塊厝',\r\n        '高雄',\r\n        '民族',\r\n        '科工館',\r\n        '正義',\r\n        '鳳山',\r\n        '後庄',\r\n        '九曲堂',\r\n      ],\r\n    },\r\n    {\r\n      city: '屏東縣',\r\n      station: [\r\n        '六塊厝',\r\n        '屏東',\r\n        '歸來',\r\n        '麟洛',\r\n        '西勢',\r\n        '竹田',\r\n        '潮州',\r\n        '崁頂',\r\n        '南州',\r\n        '鎮安',\r\n        '林邊',\r\n        '佳冬',\r\n        '東海',\r\n        '枋寮',\r\n        '加祿',\r\n        '內獅',\r\n        '枋山',\r\n      ],\r\n    },\r\n    {\r\n      city: '臺東縣',\r\n      station: [\r\n        '大武',\r\n        '瀧溪',\r\n        '金崙',\r\n        '太麻里',\r\n        '知本',\r\n        '康樂',\r\n        '臺東',\r\n        '山里',\r\n        '鹿野',\r\n        '瑞源',\r\n        '瑞和',\r\n        '關山',\r\n        '海端',\r\n        '池上',\r\n      ],\r\n    },\r\n    {\r\n      city: '花蓮縣',\r\n      station: [\r\n        '富里',\r\n        '東竹',\r\n        '東里',\r\n        '玉里',\r\n        '三民',\r\n        '瑞穗',\r\n        '富源',\r\n        '大富',\r\n        '光復',\r\n        '萬榮',\r\n        '鳳林',\r\n        '南平',\r\n        '林榮新光',\r\n        '豐田',\r\n        '壽豐',\r\n        '平和',\r\n        '志學',\r\n        '吉安',\r\n        '花蓮',\r\n        '北埔',\r\n        '景美',\r\n        '新城',\r\n        '崇德',\r\n        '和仁',\r\n        '和平',\r\n      ],\r\n    },\r\n    {\r\n      city: '宜蘭縣',\r\n      station: [\r\n        '漢本',\r\n        '武塔',\r\n        '南澳',\r\n        '東澳',\r\n        '永樂',\r\n        '蘇澳',\r\n        '蘇澳新',\r\n        '新馬',\r\n        '冬山',\r\n        '羅東',\r\n        '中里',\r\n        '二結',\r\n        '宜蘭',\r\n        '四城',\r\n        '礁溪',\r\n        '頂埔',\r\n        '頭城',\r\n        '外澳',\r\n        '龜山',\r\n        '大溪',\r\n        '大里',\r\n        '石城',\r\n      ],\r\n    },\r\n  ],\r\n}\r\n\r\n\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {stationSelectData} from './DATA/stationSelectData'\r\n\r\nconst AppContext = React.createContext()\r\nconst AppProvider = ({ children }) => {\r\n  console.log('context.js :')\r\n  \r\n  // 車站資料\r\n  const [stationData, setStationData] = useState([])\r\n  // 日期 出發站名 抵達站名 出發站ID 抵達站ID\r\n  const [selectedDate, setSelectedDate] = useState('')\r\n  const [startName, setStartName] = useState('')\r\n  const [finishName, setFinishName] = useState('')\r\n  const [startID, setStartID] = useState('')\r\n  const [finishID, setFinishID] = useState('')\r\n  // 時刻車種車次資料 票價資料\r\n  const [resultsData, setResultsData] = useState(null)\r\n  const [faresData, setFaresData] = useState(null)\r\n  // 車次 車次資料\r\n  const [trainNo, setTrainNo] = useState('')\r\n  const [trainNoData, setTrainNoData] = useState(null)\r\n  // 查詢按鈕\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  // 抓車站資料 stationData\r\n  useEffect(() => {\r\n    const getStationData = async () => {\r\n      const res = await fetch(\r\n        'https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/Station?$select=StationName%2CStationID&$format=JSON'\r\n      )\r\n      const data = await res.json()\r\n      setStationData(data)\r\n    }\r\n    getStationData()\r\n  }, [])\r\n\r\n  // 抓出發站ID/抵達站ID startID/finishID\r\n  useEffect(() => {\r\n    // 出發站抵達站選了才跑\r\n    if (startName === '' || finishName === '') {\r\n      return\r\n    }\r\n    stationData['Stations'].forEach((item) => {\r\n      const { StationID, StationName } = item\r\n      // 透過 出發站名 找到 出發站ID\r\n      if (StationName['Zh_tw'] === startName) {\r\n        setStartID(StationID)\r\n      }\r\n      // 透過 抵達站名 找到 抵達站ID\r\n      if (StationName['Zh_tw'] === finishName) {\r\n        setFinishID(StationID)\r\n      }\r\n    })\r\n  }, [startName, finishName])\r\n\r\n  // 抓時刻車種車次資料 resultsData\r\n  const fetchResultData = async () => {\r\n    if (\r\n      selectedDate === '' ||\r\n      startID === '' ||\r\n      finishID === '' ||\r\n      isSending === false\r\n    ) {\r\n      return\r\n    }\r\n    const res = await fetch(\r\n      `https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/DailyTrainTimetable/OD/${startID}/to/${finishID}/${selectedDate}?$format=JSON`\r\n    )\r\n    let data = await res.json()\r\n    data = data.TrainTimetables\r\n    // 先把resultsData按DepartureTime(出發時間)排好\r\n    data.sort(function (a, b) {\r\n      return a.StopTimes[0].DepartureTime.replace(/[^0-9]/gi, '') >\r\n        b.StopTimes[0].DepartureTime.replace(/[^0-9]/gi, '')\r\n        ? 1\r\n        : -1\r\n    })\r\n    setResultsData(data)\r\n  }\r\n\r\n  // 抓票價資料 faresData\r\n  const fetchFaresData = async () => {\r\n    if (startID === '' || finishID === '' || isSending === false) {\r\n      return\r\n    }\r\n    const res = await fetch(\r\n      `https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/ODFare/${startID}/to/${finishID}?$select=Fares&$filter=Direction%20eq%201%20\r\n      &$format=JSON`\r\n    )\r\n    let data = await res.json()\r\n    data = data.ODFares\r\n    setFaresData(data)\r\n  }\r\n\r\n  // 抓車次資料 trainNoData\r\n  const fetchTrainNoData = async () => {\r\n    if (trainNo === '' || isSending === false) {\r\n      return\r\n    }\r\n    const res = await fetch(\r\n      `https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/GeneralTrainTimetable/TrainNo/${trainNo}?&$format=JSON`\r\n    )\r\n    let data = await res.json()\r\n    data = data.TrainTimetables\r\n    setTrainNoData(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 抓時刻車種車次\r\n    fetchResultData()\r\n    // 抓票價\r\n    fetchFaresData()\r\n    // 抓車次\r\n    fetchTrainNoData()\r\n    // 清空查詢關鍵字\r\n    setIsSending(false)\r\n    setStartName('')\r\n    setFinishName('')\r\n    setStartID('')\r\n    setFinishID('')\r\n    setTrainNo('')\r\n  }, [isSending])\r\n\r\n\r\n  // 方便除錯的LOG\r\n  console.log(`1 車站下拉選單資料:${stationSelectData}/ 車站資料:${stationData}`)\r\n  console.log(\r\n    `2 日期:${selectedDate}/ 出發站名:${startName}/ 抵達站名:${finishName}/ 出發站ID:${startID}/ 抵達站ID:${finishID}`\r\n  )\r\n  console.log(`3 時刻車種車次資料:${resultsData}/ 票價資料:${faresData}`)\r\n  console.log(`4 車次:${trainNo}/ 車次資料:${trainNoData}`)\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        stationSelectData,\r\n        selectedDate,\r\n        setSelectedDate,\r\n        startName,\r\n        finishName,\r\n        setStartName,\r\n        setFinishName,\r\n        resultsData,\r\n        setIsSending,\r\n        faresData,\r\n        trainNo,\r\n        setTrainNo,\r\n        trainNoData,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppProvider, AppContext }","import React from 'react'\r\nimport {useGlobalContext} from './context'\r\n\r\n\r\nfunction DateSelector() {\r\n    console.log('DateSelector.js :');\r\n    // 另外設一個只在這file的變數date,輸入的時候才不會瘋狂re-render\r\n    const { selectedDate,setSelectedDate } = useGlobalContext()\r\n\r\n    return (\r\n      <div>\r\n          <label>日期: </label>\r\n          <input\r\n            type='text'\r\n            placeholder='YYYY-MM-DD'\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n          />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DateSelector\r\n","import React  from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nfunction StationSelector() {\r\n  console.log('CitySeletor.js :')\r\n\r\n  const {\r\n    stationSelectData,\r\n    startName,\r\n    setStartName,\r\n    setFinishName,\r\n    setIsSending,\r\n  } = useGlobalContext()\r\n\r\n  const handleRequest = ()=>{\r\n    setIsSending(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        {/* 出發站下拉選單 */}\r\n        <label>出發站: </label>\r\n        <select  defaultValue={'DEFAULT'} onChange={(e) => setStartName(e.target.value)}>\r\n          <option value=\"DEFAULT\" disabled>請選擇</option>\r\n          {stationSelectData['data'].map((item, index) => {\r\n            return (\r\n              // 選縣市\r\n              <optgroup key={index} label={item.city}>\r\n                {/* 選車站 */}\r\n                {item['station'].map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  )\r\n                })}\r\n              </optgroup>\r\n            )\r\n          })}\r\n        </select>\r\n      </section>\r\n      {/* 抵達站下拉選單 */}\r\n      <section>\r\n        <label>抵達站: </label>\r\n        <select defaultValue={'DEFAULT'} onChange={(e) => setFinishName(e.target.value)}>\r\n          <option value='DEFAULT' disabled>請選擇</option>\r\n          {stationSelectData['data'].map((item, index) => {\r\n            return (\r\n              <optgroup key={index} label={item['city']}>\r\n                {item['station'].map((item, index) => {\r\n                  // 不可出發抵達站相同\r\n                  if (item === startName) {\r\n                    return (\r\n                      <option key={index} value={item} disabled >\r\n                        {item}\r\n                      </option>\r\n                    )\r\n                  }\r\n                  return (\r\n                    <option key={index} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  )\r\n                })}\r\n              </optgroup>\r\n            )\r\n          })}\r\n        </select>\r\n        <button type='button' onClick={handleRequest} >查詢</button>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StationSelector\r\n\r\n\r\n\r\n \r\n","import React from 'react'\r\nimport {useGlobalContext} from './context'\r\n\r\nfunction Results() {\r\n  console.log('Results.js :')\r\n  const { resultsData, faresData } = useGlobalContext()\r\n\r\n  return (\r\n    <>\r\n      {resultsData && faresData && <section>\r\n        {/* 顯示查詢結果 */}\r\n        <span className='bold'>\r\n          出發時間--抵達時間--車種車次(起點--&gt;終點)-----票價\r\n        </span>\r\n        {resultsData.map((item, index) => {\r\n            const { TrainInfo, StopTimes } = item\r\n            const {\r\n              TrainTypeCode,\r\n              TrainTypeName,\r\n              TrainNo,\r\n              StartingStationName,\r\n              EndingStationName,\r\n            } = TrainInfo\r\n            const { DepartureTime } = StopTimes[0]\r\n            const { ArrivalTime } = StopTimes[StopTimes.length - 1]\r\n\r\n            // 用trainTypeCode 找到 對應車種的票價資料\r\n            const singlePrice = faresData.filter((item) => {\r\n              return item.TrainType === parseInt(TrainTypeCode)\r\n            })\r\n\r\n            // 在票價資料 找到 成人孩童敬老的票價 放在price\r\n            let price = []\r\n            singlePrice[0].Fares.forEach((item) => {\r\n              const { FareClass, Price } = item\r\n              if (FareClass === 1) {\r\n                price.push(`成人:${Price}`)\r\n              } else if (FareClass === 3) {\r\n                price.push(`孩童:${Price}`)\r\n              } else if (FareClass === 4) {\r\n                price.push(`敬老:${Price}`)\r\n              }\r\n            })\r\n\r\n            return (\r\n              <div key={index}>\r\n                {/* 顯示查詢時刻 */}\r\n                <span>\r\n                  {DepartureTime}---&gt;\r\n                  {ArrivalTime}----------\r\n                </span>\r\n                {/* 顯示查詢車種車次(起點站->終點站) */}\r\n                <span>\r\n                  {TrainTypeName['Zh_tw'].match(\r\n                    '自強'\r\n                  ) /* 有些自強號的資料太醜 */\r\n                    ? '自強'\r\n                    : TrainTypeName['Zh_tw']}\r\n                  {TrainNo}\r\n                </span>\r\n                <span>\r\n                  ({StartingStationName['Zh_tw']}---&gt;\r\n                  {EndingStationName['Zh_tw']})----\r\n                </span>\r\n                {/* 顯示查詢票價 */}\r\n                {price.map((item, index) => {\r\n                  return <span key={index}>{item}</span>\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n      </section>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\n\r\nfunction TrainNoSelector() {\r\n    console.log('TrainNoSelector.js :')\r\n    const { trainNo, setTrainNo, setIsSending, trainNoData } = useGlobalContext()\r\n\r\n    return (\r\n      <div>\r\n        {/* 輸入車次 */}\r\n        <section>\r\n          <label>車次:</label>\r\n          <input\r\n            type='text'\r\n            placeholder='1137'\r\n            value={trainNo}\r\n            onChange={(e) => setTrainNo(e.target.value)}\r\n          />\r\n          {/* 查詢按鈕 */}\r\n          <button onClick={() => setIsSending(true)}>查詢</button>\r\n        </section>\r\n\r\n        {/* 車次資料 */}\r\n        {trainNoData && (\r\n          <section>\r\n            <div className='bold'>車種車次(起點--&gt;終點)</div>\r\n            <span>{trainNoData[0]['TrainInfo']['TrainTypeName']['Zh_tw']}</span>\r\n            <span>{trainNoData[0]['TrainInfo']['TrainNo']}</span>\r\n            <span>\r\n              ({trainNoData[0]['TrainInfo']['StartingStationName']['Zh_tw']}\r\n              ---&gt;\r\n              {trainNoData[0]['TrainInfo']['EndingStationName']['Zh_tw']})\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <span className='bold'>停靠站--抵達時間--出發時間</span>\r\n            {trainNoData[0]['StopTimes'].map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <span>{item['StationName']['Zh_tw']}-----</span>\r\n                  <span>{item['ArrivalTime']}-----</span>\r\n                  <span>{item['ArrivalTime']}</span>\r\n                  <br />\r\n                </div>\r\n              )\r\n            })}\r\n          </section>\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TrainNoSelector\r\n","import React from 'react'\nimport DateSelector from './DateSelector'\nimport StationSelector from './StationSelector'\nimport Results from './Results'\nimport TrainNoSelector from './TrainNoSelector'\n\nfunction App() {\n  return (\n    <>\n      <h1>台鐵時刻查詢</h1>\n      <h2>依出發抵達站查詢:</h2>\n      <DateSelector />\n      <StationSelector />\n      <Results />\n      <h1>\n        ------------------------------\n      </h1>\n      <h2>依車次查詢:</h2>\n      <TrainNoSelector />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context'\n\n\nReactDOM.render(\n  <AppProvider >\n    <App />\n  </AppProvider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}